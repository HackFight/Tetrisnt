//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/InputAssets/SprayControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SprayControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SprayControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SprayControls"",
    ""maps"": [
        {
            ""name"": ""Spray"",
            ""id"": ""2b64badb-170a-46a0-b56a-2182d7a5993d"",
            ""actions"": [
                {
                    ""name"": ""Paint1"",
                    ""type"": ""Button"",
                    ""id"": ""8efd4ae5-1c9d-43c4-9c79-654b385f3758"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Paint2"",
                    ""type"": ""Button"",
                    ""id"": ""4d212a13-2e8f-4524-b3fe-0c24f6a127e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Paint3"",
                    ""type"": ""Button"",
                    ""id"": ""99be60dc-2f4b-4405-b754-af8ea675ede0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Paint4"",
                    ""type"": ""Button"",
                    ""id"": ""79ebe590-ca1b-413e-97f1-ffa704c5449d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb1ccf88-515b-4f13-a24f-5fd4f9505ed7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01eb6910-1930-4d0a-80b7-7563c02f3d39"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4f1d4ed-02f0-4966-aea0-c3e610ee8223"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9541757-5342-430d-acce-71f2cb95d1d3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f231739-c2dd-47be-95f2-8d854aa95c96"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cbef4bd-b1f3-47e6-9b55-b6330244b313"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8366e609-4185-460c-aa55-303caf6f0e3d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78a0b9d2-40f0-47f8-a96e-1d210ddab6e3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af902a9c-d667-4407-b98f-14aa78c28f40"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e55160f-230d-47bb-a5dc-51162f5df565"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c16f58e-6a59-4f65-9dd3-ee9c8f4f836f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31e37a25-c1ee-4c01-b965-91413360f11e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Spray
        m_Spray = asset.FindActionMap("Spray", throwIfNotFound: true);
        m_Spray_Paint1 = m_Spray.FindAction("Paint1", throwIfNotFound: true);
        m_Spray_Paint2 = m_Spray.FindAction("Paint2", throwIfNotFound: true);
        m_Spray_Paint3 = m_Spray.FindAction("Paint3", throwIfNotFound: true);
        m_Spray_Paint4 = m_Spray.FindAction("Paint4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Spray
    private readonly InputActionMap m_Spray;
    private ISprayActions m_SprayActionsCallbackInterface;
    private readonly InputAction m_Spray_Paint1;
    private readonly InputAction m_Spray_Paint2;
    private readonly InputAction m_Spray_Paint3;
    private readonly InputAction m_Spray_Paint4;
    public struct SprayActions
    {
        private @SprayControls m_Wrapper;
        public SprayActions(@SprayControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Paint1 => m_Wrapper.m_Spray_Paint1;
        public InputAction @Paint2 => m_Wrapper.m_Spray_Paint2;
        public InputAction @Paint3 => m_Wrapper.m_Spray_Paint3;
        public InputAction @Paint4 => m_Wrapper.m_Spray_Paint4;
        public InputActionMap Get() { return m_Wrapper.m_Spray; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SprayActions set) { return set.Get(); }
        public void SetCallbacks(ISprayActions instance)
        {
            if (m_Wrapper.m_SprayActionsCallbackInterface != null)
            {
                @Paint1.started -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint1;
                @Paint1.performed -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint1;
                @Paint1.canceled -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint1;
                @Paint2.started -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint2;
                @Paint2.performed -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint2;
                @Paint2.canceled -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint2;
                @Paint3.started -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint3;
                @Paint3.performed -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint3;
                @Paint3.canceled -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint3;
                @Paint4.started -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint4;
                @Paint4.performed -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint4;
                @Paint4.canceled -= m_Wrapper.m_SprayActionsCallbackInterface.OnPaint4;
            }
            m_Wrapper.m_SprayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Paint1.started += instance.OnPaint1;
                @Paint1.performed += instance.OnPaint1;
                @Paint1.canceled += instance.OnPaint1;
                @Paint2.started += instance.OnPaint2;
                @Paint2.performed += instance.OnPaint2;
                @Paint2.canceled += instance.OnPaint2;
                @Paint3.started += instance.OnPaint3;
                @Paint3.performed += instance.OnPaint3;
                @Paint3.canceled += instance.OnPaint3;
                @Paint4.started += instance.OnPaint4;
                @Paint4.performed += instance.OnPaint4;
                @Paint4.canceled += instance.OnPaint4;
            }
        }
    }
    public SprayActions @Spray => new SprayActions(this);
    public interface ISprayActions
    {
        void OnPaint1(InputAction.CallbackContext context);
        void OnPaint2(InputAction.CallbackContext context);
        void OnPaint3(InputAction.CallbackContext context);
        void OnPaint4(InputAction.CallbackContext context);
    }
}
